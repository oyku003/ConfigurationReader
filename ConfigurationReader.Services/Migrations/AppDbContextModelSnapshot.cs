// <auto-generated />
using ConfigurationReader.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConfigurationReader.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("ConfigurationReader.Data.Entities.ServiceConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationName = "SERVICE-A",
                            IsActive = (short)1,
                            Name = "SiteName",
                            Type = "String",
                            Value = "Boyner.com.tr"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationName = "SERVICE-B",
                            IsActive = (short)1,
                            Name = "IsBasktetEnabled",
                            Type = "Boolean",
                            Value = "1"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationName = "SERVICE-A",
                            IsActive = (short)0,
                            Name = "MaxItemCount",
                            Type = "Int",
                            Value = "50"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
